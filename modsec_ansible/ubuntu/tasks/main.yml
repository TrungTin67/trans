- name: Copy CIS Audit compress folder
  become: true
  ansible.builtin.copy:
    src: "{{ modsec }}"
    dest: "{{ unarchive_path }}"
    mode: "0644"

- name: Untar installer
  ansible.builtin.unarchive:
    src: "{{ unarchive_path }}"
    dest: "{{ unarchive_path }}"
    remote_src: yes

- name: Run script update needed path
  become: true
  become_method: sudo
  command: apt-get install -y git g++ apt-utils autoconf automake build-essential libcurl4-openssl-dev libgeoip-dev liblmdb-dev libpcre++-dev libtool libxml2-dev libyajl-dev pkgconf wget zlib1g-dev

- name: Run script build.sh
  become: true
  become_method: sudo
  command: sh build.sh
  args:
    chdir: "{{ unarchive_path }}/ModSecurity/"

- name: Run script ./configure
  become: true
  become_method: sudo
  command: ./configure
  args:
    chdir: "{{ unarchive_path }}/ModSecurity/"

- name: Run script make
  become: true
  become_method: sudo
  command: make
  args:
    chdir: "{{ unarchive_path }}/ModSecurity/"

- name: Run script make install
  become: true
  become_method: sudo
  command: make install
  args:
    chdir: "{{ unarchive_path }}/ModSecurity/"

- name: Get nginx version
  command: nginx -v
  register: nginx_version

- name: Run script make install
  become: true
  become_method: sudo
  command: wget http://nginx.org/download/{{ nginx_version }}.tar.gz
  args:
    chdir: "{{ unarchive_path }}/ModSecurity/"

- name: Untar nginx
  ansible.builtin.unarchive:
    src: "{{ unarchive_path }}/ModSecurity/{{ nginx_version }}.tar.gz"
    dest: "{{ unarchive_path }}/ModSecurity/"

- name: Run script configure module
  become: true
  become_method: sudo
  command: ./configure --with-compat --add-dynamic-module=../ModSecurity-nginx
  args:
    chdir: "{{ unarchive_path }}/ModSecurity/{{ nginx_version }}"

- name: Run script make modules
  become: true
  become_method: sudo
  command: make modules
  args:
    chdir: "{{ unarchive_path }}/ModSecurity/{{ nginx_version }}"

- name: Create a folder modsec in /ect/nginx
  ansible.builtin.file:
    path: /etc/nginx/modsec 
    state: directory

- name: Create a folder modsec in /var/log
  ansible.builtin.file:
    path: /var/log/modsec 
    state: directory

- name: Copy a file main.conf to /etc/nginx/modsec/
  ansible.builtin.copy:
    src: "{{ unarchive_path }}/main.conf"
    dest: "/etc/nginx/modsec/"

- name: Copy a file modsecurity.conf to /etc/nginx/modsec/
  ansible.builtin.copy:
    src: "{{ unarchive_path }}/modsecurity.conf"
    dest: "/etc/nginx/modsec/"

- name: Copy a file unicode.mapping to /etc/nginx/modsec/
  ansible.builtin.copy:
    src: "{{ unarchive_path }}/unicode.mapping"
    dest: "/etc/nginx/modsec/"

- name: Copy a file modsecurity-crs.zip to /usr/local/
  ansible.builtin.copy:
    src: "{{ unarchive_path }}/modsecurity-crs.zip"
    dest: "/usr/local/"

- name: Untar modsecurity-crs.zip
  ansible.builtin.unarchive:
    src: "{{ unarchive_path }}/modsecurity-crs.zip"
    dest: "/usr/local/"
    remote_src: yes

- name: Copy module modsec to folder nginx module
  ansible.builtin.copy:
    src: "{{ unarchive_path }}/ModSecurity/{{ nginx_version }}/objs/ngx_http_modsecurity_module.so"
    dest: "{{nginx_modules_path}}"

- name: Copy a file logrotate for modsec
  ansible.builtin.copy:
    src: "{{ unarchive_path }}/modsec"
    dest: "/etc/logrotate.d/"

- name: Add Logrotate Cron Job
  ansible.builtin.copy:
    src: "{{ unarchive_path }}/logrotatemodsec"
    dest: "/etc/crond.d/"

- name: Add ModSecurity to nginx
  ansible.builtin.lineinfile:
    path: /etc/nginx/nginx.conf
    insertafter: '^\s*http {'
    line: |
      modsecurity on;
      modsecurity_rules_file /etc/nginx/modsec/main.conf;

- name: Add file configure load modsec module
  ansible.builtin.copy:
    src: "{{ unarchive_path }}/50-mod-modsecurity.conf"
    dest: "/etc/nginx/modules-enabled/"

- name: Check nginx configuration
  command: nginx -t
  register: nginx_test_result
  changed_when: false

- name: Reload nginx if configuration is valid
  command: service nginx reload
  when: nginx_test_result.stdout.find("OK") != -1